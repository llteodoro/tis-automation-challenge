
trigger:
- main

pool:
  vmImage: ubuntu-latest

steps:

- script:


- task: TerraformTaskV3@3
  inputs:
    workingDirectory: '$(System.DefaultWorkingDirectory)/terraform/'
    provider: 'aws'
    command: 'init'
    environmentServiceNameAWS: 'llteodoro-tis-automation-challenge'
    backendServiceAWS: 'llteodoro-tis-automation-challenge'
    backendAWSBucketName: 'tis-automation-challenge'
    backendAWSKey: 'tf-state/terraform.tfstate'

- task: TerraformTaskV3@3
  inputs:
    workingDirectory: '$(System.DefaultWorkingDirectory)/terraform/'
    provider: 'aws'
    command: 'plan'
    environmentServiceNameAWS: 'llteodoro-tis-automation-challenge'
    backendServiceAWS: 'llteodoro-tis-automation-challenge'
    backendAWSBucketName: 'tis-automation-challenge'
    backendAWSKey: 'tf-state/terraform.tfstate'

- task: TerraformTaskV3@3
  inputs:
    workingDirectory: '$(System.DefaultWorkingDirectory)/terraform/'
    provider: 'aws'
    command: 'apply'
    commandOptions: '-auto-approve'
    environmentServiceNameAWS: 'llteodoro-tis-automation-challenge'
    backendServiceAWS: 'llteodoro-tis-automation-challenge'
    backendAWSBucketName: 'tis-automation-challenge'
    backendAWSKey: 'tf-state/terraform.tfstate'
    
- task: DownloadSecureFile@1
  inputs:
    secureFile: 'challenge-key.pem'
    
#- task: CopyFiles@2
#  displayName: 'Copy file'
#  inputs:
#    SourceFolder: '$(Build.SourcesDirectory)'
#    OverWrite: true 
#    Contents: |
#      **/ansible/**
#    TargetFolder: '/tmp/tis-cc-automation/'

- task: CmdLine@2
  displayName: Install Dependencies 
  inputs:
    workingDirectory: $(System.DefaultWorkingDirectory)
    script: |
      export AWS_ACCES_KEY_ID=$(AWS_ACCES_KEY_ID)
      export AWS_SECRET_ACCESS_KEY=$(AWS_ACCES_KEY_SECRET)
      python3 -m venv .venv && source .venv/bin/activate
      python3 pip install "botocore"
      python3 pip install "boto3"
      ansible-playbook -i ansible/inventory_aws_ec2.yml ansible/playbook-linux.yml -u ubuntu --private-key challenge-key.pem


#- task: CmdLine@2
#  displayName: Run Ansible Playbook Linux
#  inputs:
#   script: |
#     cd /tmp/tis-cc-automation/ansible
#     python3 -m venv .venv && source .venv/bin/activate
#     ansible-playbook -i inventory_aws_ec2.yml playbook-linux.yml -u ubuntu --private-key challenge-key.pem

#- task: CmdLine@3
#  displayName: Run Ansible Playbook Windows
#  inputs:
#    script: |
#    cd /tmp/tis-cc-automation
#    python3 -m venv venv
#    source venv/bin/activate
#    ansible-playbook -i inventory_aws_ec2.yml playbook-linux.yml -u ubuntu -private-key challenge-key.pem